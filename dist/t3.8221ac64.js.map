{"version":3,"sources":["stars.js","drawStars.js","index.js"],"names":["Star","obj","radius","color","x","y","element","document","createElement","className","querySelector","appendChild","style","backgroundColor","width","height","top","left","boxShadow","drawStars","container","firstChild","removeChild","stars","i","rand","h","s","l","push","min","max","Math","floor","random","globals","first","difficulty","symbol","t3Game","winningCells","initialize","win","infoText","playerCells","computerCells","gameOver","initializeBoard","updateBoard","html","innerHTML","findPairs","cells","foundPairs","forEach","winningSet","count","cell","includes","move","playerWin","winCheck","length","possibleMoves","allPairs","concat","e","bestMoves","reverse","ceil","pInput","cellNumber","parseInt","setFirstHuman","setFirstComputer","setDifficultyEasy","setDifficultyHard","setSymbolX","setSymbolO","innerText","winningColor","j","foundWin","window","addEventListener","tID","target","id","slice"],"mappings":"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","file":"t3.8221ac64.js","sourceRoot":"..","sourcesContent":["export default class Star {\r\n    constructor(obj) {\r\n        this.radius = obj.radius;\r\n        this.color = obj.color;\r\n        this.x = obj.x;\r\n        this.y = obj.y;\r\n        this.element = document.createElement(\"div\");\r\n        this.element.className = \"star\";\r\n        document.querySelector(\"#bg3\").appendChild(this.element);\r\n        this.element.style.backgroundColor = this.color;\r\n        this.element.style.width = this.element.style.height = `${this.radius}px`;\r\n        this.element.style.top = `${this.y}vh`;\r\n        this.element.style.left = `${this.x}vw`;\r\n        this.element.style.boxShadow = `0 0 ${this.radius*2}px ${this.radius/2}px ${this.color}`;\r\n    }\r\n}","import Star from \"./stars\"\r\n\r\nfunction drawStars() {\r\n    let container = document.querySelector(\"#bg3\");\r\n    while (container.firstChild) { container.removeChild(container.firstChild); }\r\n    let stars = [];\r\n    for (let i=0;i<200;i++) {\r\n        let x = rand(0,100);\r\n        let y = rand(0,100);\r\n        let h = rand(1,359);\r\n        let s = rand(50,100);\r\n        let l = rand(80,100);\r\n        let radius = rand(1,4);\r\n        stars.push(new Star({x:x,y:y,color:`hsl(${h},${s}%,${l}%)`,radius:radius}));\r\n    }\r\n    return stars;\r\n}\r\n\r\nfunction rand(min,max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nexport default drawStars;","import Star from './stars';\r\nimport drawStars from './drawStars';\r\n\r\nlet globals = {\r\n    stars: [],\r\n    first: \"human\",\r\n    difficulty: \"easy\",\r\n    symbol: \"X\",\r\n}\r\nlet t3Game = {\r\n    difficulty:\"easy\",\r\n    first:\"human\",\r\n    symbol:\"X\",\r\n    winningCells:[[1,2,3],[4,5,6],[7,8,9],[1,5,9],[3,5,7],[1,4,7],[2,5,8],[3,6,9]],\r\n    initialize: ()=>{\r\n        t3Game.win=null;\r\n        t3Game.infoText=\"good luck!\";\r\n        t3Game.playerCells=[];\r\n        t3Game.computerCells=[];\r\n        t3Game.gameOver=false;\r\n        t3Game.initializeBoard();\r\n        t3Game.updateBoard();\r\n    },\r\n    initializeBoard:()=>{\r\n        let html = \"\";\r\n        for (let i=1;i<4;i++){\r\n            html+=`<tr>\r\n                <td id=\"cell${3*i-2}\" class=\"cell\"></td>\r\n                <td id=\"cell${3*i-1}\" class=\"cell\"></td>\r\n                <td id=\"cell${3*i}\" class=\"cell\"></td></tr>`;\r\n        }\r\n        document.querySelector(\"#gameBoard\").innerHTML = html;\r\n    },\r\n    findPairs: (cells) => {\r\n        let foundPairs = [];\r\n        t3Game.winningCells.forEach(winningSet=>{\r\n            let count = 0;\r\n            //might be a problem here!\r\n            cells.forEach((cell)=>{\r\n                if (winningSet.includes(cell)) { count++; }\r\n                if (count == 2) { foundPairs.push(winningSet)}\r\n            })\r\n        });\r\n        return foundPairs;\r\n    },\r\n    move: () => {\r\n        let playerWin = t3Game.winCheck(t3Game.playerCells);\r\n        if (playerWin.length > 0) { t3Game.win = true; t3Game.infoText = \"you win!\"; t3Game.gameOver = true; t3Game.updateBoard(); return; }\r\n        let possibleMoves = [];\r\n        let allPairs = [];\r\n        allPairs = allPairs.concat(t3Game.findPairs(t3Game.computerCells),t3Game.findPairs(t3Game.playerCells));\r\n        if (allPairs.length > 0) { \r\n            allPairs.forEach((e)=>{\r\n                e.forEach((i)=>{\r\n                    if (!t3Game.computerCells.includes(i) && !t3Game.playerCells.includes(i)) {\r\n                        possibleMoves.push(i);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        let bestMoves = [5,1,3,7,9,2,4,6,8];\r\n        if (t3Game.difficulty == \"easy\") { bestMoves = bestMoves.reverse(); }\r\n        if (t3Game.playerCells.length == 0 && t3Game.computerCells.length == 0) { \r\n            if (t3Game.difficulty == \"easy\") { \r\n                t3Game.computerCells.push(bestMoves[Math.ceil(Math.random()*(bestMoves.length-1))]); \r\n            }\r\n            if (t3Game.difficulty == \"hard\") { t3Game.computerCells.push(bestMoves[0]); }\r\n            t3Game.updateBoard(); return;\r\n        }\r\n        bestMoves.forEach(e=>{\r\n            if (!t3Game.computerCells.includes(e) && !t3Game.playerCells.includes(e) && !possibleMoves.includes(e)) { possibleMoves.push(e); }\r\n        });\r\n        if (possibleMoves[0]) { t3Game.computerCells.push(possibleMoves[0]); }\r\n        if (t3Game.winCheck(t3Game.computerCells).length>0) { \r\n            t3Game.infoText = \"you lost!\"; t3Game.win = false; t3Game.gameOver = true;\r\n        }\r\n        if (t3Game.computerCells.length + t3Game.playerCells.length == 9) { t3Game.infoText = \"nobody won\"; t3Game.win = null; }\r\n        t3Game.updateBoard();\r\n    },\r\n    pInput:(cell)=>{\r\n        let cellNumber = parseInt(cell);\r\n        if (t3Game.playerCells.includes(cellNumber) || t3Game.computerCells.includes(cellNumber) || t3Game.gameOver == true) { return; }\r\n        else { t3Game.playerCells.push(cellNumber); t3Game.move(); }\r\n    },\r\n    setFirstHuman:()=>{\r\n        if (t3Game.first != \"human\") {\r\n            t3Game.first = \"human\";\r\n            document.querySelector(\"#firstHuman\").className = \"selected\";\r\n            document.querySelector(\"#firstComputer\").className = \"\";\r\n        }\r\n    },\r\n    setFirstComputer:()=>{\r\n        if (t3Game.first != \"computer\") {\r\n            t3Game.first = \"computer\";\r\n            document.querySelector(\"#firstHuman\").className = \"\";\r\n            document.querySelector(\"#firstComputer\").className = \"selected\";\r\n        }\r\n    },\r\n    setDifficultyEasy:()=>{\r\n        if (t3Game.difficulty != \"easy\") {\r\n            t3Game.difficulty = \"easy\";\r\n            document.querySelector(\"#difficultyEasy\").className = \"selected\";\r\n            document.querySelector(\"#difficultyHard\").className = \"\";\r\n        }\r\n    },\r\n    setDifficultyHard:()=>{\r\n        if (t3Game.difficulty != \"hard\") {\r\n            t3Game.difficulty = \"hard\";\r\n            document.querySelector(\"#difficultyEasy\").className = \"\";\r\n            document.querySelector(\"#difficultyHard\").className = \"selected\";\r\n        }\r\n    },\r\n    setSymbolX:()=>{\r\n        if (t3Game.symbol != \"X\") {\r\n            t3Game.symbol = \"X\";\r\n            document.querySelector(\"#symbolX\").className = \"selected\";\r\n            document.querySelector(\"#symbolO\").className = \"\";\r\n        }\r\n    },\r\n    setSymbolO:()=>{\r\n        if (t3Game.symbol != \"O\") {\r\n            t3Game.symbol = \"O\";\r\n            document.querySelector(\"#symbolX\").className = \"\";\r\n            document.querySelector(\"#symbolO\").className = \"selected\";\r\n        }\r\n    },\r\n    updateBoard: ()=>{\r\n        document.querySelector(\"#infoText\").innerText = t3Game.infoText;\r\n        for (let i=1;i<10;i++){\r\n            let symbol = ` `;\r\n            if (t3Game.playerCells.includes(i)) { \r\n                symbol = t3Game.symbol; \r\n            }\r\n            if (t3Game.computerCells.includes(i)) { \r\n                symbol = (t3Game.symbol == \"X\") ? \"O\" : \"X\"; \r\n            }\r\n            document.querySelector(`#cell${i}`).innerText = symbol;\r\n        }\r\n        if (t3Game.win != null) {\r\n            let winningCells = (t3Game.win == true) ? t3Game.winCheck(t3Game.playerCells) : t3Game.winCheck(t3Game.computerCells);\r\n            //highlight winning cells\r\n            let winningColor = (t3Game.win == true) ? \"var(--c6)\" : \"var(--c7)\";\r\n            winningCells.forEach(i=>{\r\n                i.forEach(j=>{\r\n                    document.querySelector(`#cell${j}`).style.color = winningColor;\r\n                })\r\n                \r\n            })\r\n        }\r\n    },\r\n    winCheck:(cells)=>{\r\n        let foundWin = [];\r\n        t3Game.winningCells.forEach((e)=>{\r\n            if (cells.includes(e[0]) && cells.includes(e[1]) && cells.includes(e[2])) {\r\n                foundWin.push(e);\r\n            }\r\n        });\r\n        return foundWin;\r\n    },\r\n}\r\n\r\nwindow.addEventListener('load',()=>{\r\n    globals.stars = drawStars();\r\n    t3Game.initialize();\r\n});\r\nwindow.addEventListener('click',(e)=>{\r\n    let tID = e.target.id;\r\n    switch(tID) {\r\n        case \"firstHuman\": t3Game.setFirstHuman(); break;\r\n        case \"firstComputer\": t3Game.setFirstComputer(); break;\r\n        case \"difficultyEasy\": t3Game.setDifficultyEasy(); break;\r\n        case \"difficultyHard\": t3Game.setDifficultyHard(); break;\r\n        case \"symbolX\": t3Game.setSymbolX(); break;\r\n        case \"symbolO\": t3Game.setSymbolO(); break;\r\n    }\r\n    if (tID.slice(0,4) == \"cell\") {\r\n        t3Game.pInput(tID.slice(4,5));\r\n    }\r\n    if (tID == \"newGame\") {\r\n        t3Game.initialize();\r\n        if (t3Game.first == \"computer\") {\r\n            t3Game.move();\r\n        }\r\n    }\r\n})"]}